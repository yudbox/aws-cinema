version: 2.1

jobs:
  build:
    docker:
      # https://circleci.com/developer/images/image/cimg/node
      # это специальный образ с DockerHub для circleci
      - image: cimg/node:16.15.0
      # указываю где образ будет хранится в моем circleci проекте
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys:
            - app-{{ checksum "package.json" }}
            - app-
      - run:
          name: Insatll dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json" }}

  deploy-to-aws-s3:
    docker:
      - image: cimg/node:16.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch in deploy
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python-dev-is-python3 build-essential
      - run:
          name: Build projects
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build succesful "
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_NAME_PROD} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_NAME_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_NAME_DEV} --delete
            fi

  deploy-to-aws-cloudfront:
    docker:
      - image: cimg/node:16.15.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch in deploy
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python-dev-is-python3 build-essential
      - run:
          name: Build projects
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build succesful "
      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID_PROD} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              echo "inside staging"
              echo  ${AWS_CLOUDFRONT_DISTRIBUTION_ID_STAGING}
              aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID_STAGING} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID_DEV} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master
